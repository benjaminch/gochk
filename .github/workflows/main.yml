name: build

on:
  push:
    branches:
      - master
    tags:
      - v*
    paths-ignore:
      - "**/README.md"
  pull_request:
    branches:
      - master

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: check this repo is private or not
        run: |
          echo "public_repo_name=$(curl https://api.github.com/users/${{ github.repository_owner }}/repos | jq '.[]["full_name"] | select(. | contains("${{ github.repository }}"))')" >> $GITHUB_ENV
          echo $public_repo_name
      - uses: actions/setup-go@v2
  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: set goprivate if this repo is private
        if: env.public_repo_name == ''
        run: |
          go env -w GOPRIVATE=github.com/${{ github.repository }}
          go env GOPRIVATE
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Run golint and go test
        run: |
          go get -u golang.org/x/lint/golint
          $(go env GOPATH)/bin/golint -set_exit_status
          cd internal/gochk
          ls
          go get -u github.com/jstemmer/go-junit-report
          go test -v ./... | $(go env GOPATH)/bin/go-junit-report > report.xml
          ls
          pwd
          echo "${{ github.workspace }}"
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: ${{ github.workspace }}/gochk/gochk/internal/gochk/report.xml # optional
          flags: unittests # optional
          verbose: true # optional (default = false)

  build_and_push_to_ghcr:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/${{ github.repository }}
          tag-sha: true
          tag-match: v(.*)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build Docker Image and Push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./build/Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}
